{"version":3,"file":"static/js/132.552f7146.chunk.js","mappings":"oRAEaA,EAASC,EAAAA,EAAAA,GAAH,sFAQNC,EAAUD,EAAAA,EAAAA,EAAH,wG,SCsCpB,EA1CgB,WACd,OAA8BE,EAAAA,EAAAA,YAA9B,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAgCF,EAAAA,EAAAA,YAAhC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAAkCJ,EAAAA,EAAAA,YAAlC,eAAOK,EAAP,KAAkBC,EAAlB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAgBR,OAfAE,QAAQC,IAAIT,IACZU,EAAAA,EAAAA,YAAU,WACR,KACE,iBAAC,2FACCL,GAAa,GADd,UAEoBM,EAAAA,EAAAA,IAAgBL,GAFpC,OAEOM,EAFP,OAGCX,EAAWW,GACXP,GAAa,GAJd,0CAAD,EASD,CAHC,MAAOQ,GACPR,GAAa,GACbF,EAAYU,EAAMC,QACnB,CACF,GAAE,CAACR,KAGF,gCACGJ,IAAaE,IAAa,yBAAMF,KAE/BE,IAAoB,OAAPJ,QAAO,IAAPA,OAAA,EAAAA,EAASe,QAAS,IAC/B,wBACGf,EAAQgB,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACX,UAACvB,EAAD,YACE,8BAAQ,WAASqB,MACjB,uBAAIC,MAFOC,EADF,OASff,GAAaJ,IACb,SAACF,EAAD,UAAS,gDAIhB,C,yLC5CKsB,E,QAAeC,EAAAA,OAAa,CAChCC,QAAS,gCACTC,QAAS,CACPC,cACE,6NACFC,OAAQ,sBAICC,EAAW,mCAAG,oGACFN,EAAaO,IAAI,qBADf,cACnBC,EADmB,yBAElBA,EAAShB,KAAKiB,SAFI,2CAAH,qDAKXC,EAAY,mCAAG,WAAMC,GAAN,uFACHX,EAAaO,IAAb,6BAAuCI,IADpC,cACpBH,EADoB,yBAEnBA,EAAShB,KAAKiB,SAFK,2CAAH,sDAKZG,EAAe,mCAAG,WAAM1B,GAAN,uFACNc,EAAaO,IAAb,gBAA0BrB,EAA1B,MADM,cACvBsB,EADuB,yBAEtBA,EAAShB,MAFa,2CAAH,sDAKfqB,EAAe,mCAAG,WAAM3B,GAAN,uFACNc,EAAaO,IAAb,gBAA0BrB,EAA1B,cADM,cACvBsB,EADuB,yBAEtBA,EAAShB,KAAKsB,MAFQ,2CAAH,sDAKfvB,EAAe,mCAAG,WAAML,GAAN,uFACJc,EAAaO,IAAb,gBAA0BrB,EAA1B,cADI,cACrBsB,EADqB,yBAEtBA,EAAShB,KAAKiB,SAFQ,2CAAH,qD","sources":["components/Reviews/Review.styled.js","components/Reviews/Reviews.jsx","services/movie-service.js"],"sourcesContent":["import styled from \"@emotion/styled\";\n\nexport const Review = styled.li`\n padding: 10px;\n\n & strong {\n    padding-bottom: 8px;\n }\n`;\n\nexport const Message = styled.p`\npadding-top: 15px;\npadding-left: 15px;\n font-size: 26px;\n font-weight: 500;\n`;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieReviews } from 'services/movie-service';\nimport { Review, Message } from './Review.styled';\n\nconst Reviews = () => {\n  const [reviews, setReviews] = useState();\n  const [rejected, setRejected] = useState();\n  const [isLoading, setIsLoading] = useState();\n  const { movieId } = useParams();\n  console.log(reviews);\n  useEffect(() => {\n    try {\n      (async () => {\n        setIsLoading(true);\n        const data = await getMovieReviews(movieId);\n        setReviews(data);\n        setIsLoading(false);\n      })();\n    } catch (error) {\n      setIsLoading(false);\n      setRejected(error.message);\n    }\n  }, [movieId]);\n\n  return (\n    <>\n      {rejected && !isLoading && <div>{rejected}</div>}\n\n      {!isLoading && reviews?.length > 1 && (\n        <ul>\n          {reviews.map(({ author, content, id }) => (\n            <Review key={id}>\n              <strong>Author: {author}</strong>\n              <p>{content}</p>\n            </Review>\n          ))}\n        </ul>\n      )}\n\n      {!isLoading && reviews && (\n        <Message>We don`t have any reviews for this movie.</Message>\n      )}\n    </>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst movieService = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  headers: {\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxNmM3MDM0ZjQzZmMxMWRhZjUzOTY2NmIxNGU1YmVhMCIsInN1YiI6IjY0OTk4NTA1YjM0NDA5MDBlMjcyZTgxNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.0M9W_VhYxYdCcevqQPPA792PMZPlCZIhzDoN3aG3W-M',\n    accept: 'application/json',\n  },\n});\n\nexport const getTrending = async () => {\n  const response = await movieService.get('trending/all/day?');\n  return response.data.results;\n};\n\nexport const searchMovies = async query => {\n  const response = await movieService.get(`search/movie?query=${query}`);\n  return response.data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await movieService.get(`movie/${movieId}?`);\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await movieService.get(`movie/${movieId}/credits?`);\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n    const response = await movieService.get(`movie/${movieId}/reviews?`);\n  return response.data.results;\n};\n"],"names":["Review","styled","Message","useState","reviews","setReviews","rejected","setRejected","isLoading","setIsLoading","movieId","useParams","console","log","useEffect","getMovieReviews","data","error","message","length","map","author","content","id","movieService","axios","baseURL","headers","Authorization","accept","getTrending","get","response","results","searchMovies","query","getMovieDetails","getMovieCredits","cast"],"sourceRoot":""}