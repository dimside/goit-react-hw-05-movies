{"version":3,"file":"static/js/33.fbf0e400.chunk.js","mappings":"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","sources":["pages/MovieDetails/MovieDetails.styled.js","pages/MovieDetails/MovieDetails.jsx","services/movie-service.js"],"sourcesContent":["import styled from '@emotion/styled';\nimport { Link } from 'react-router-dom';\n\nexport const MovieDetailsSection = styled.div`\n  padding: 15px;\n`;\n\nexport const BackButton = styled(Link)`\n  border: 2px solid black;\n  border-radius: 5px;\n  font-size: 18px;\n  display: flex;\n  justify-content: space-around;\n  align-items: center;\n  width: 100px;\n  background-color: #ffdb8f;\n  color: #820000;\n  margin-bottom: 10px;\n\n  &:hover {\n    box-shadow: 1px 2px 2px 2px gray;\n  }\n`;\n\nexport const MovieInfoContainer = styled.div`\n  display: flex;\n  padding-bottom: 10px;\n  box-shadow: 0 4px 2px -2px gray;\n\n  & div {\n    display: flex;\n    flex-direction: column;\n    row-gap: 15px;\n  }\n`;\n\nexport const ImgContainer = styled.div`\n  margin-right: 20px;\n\n  & img {\n    width: 200px;\n  }\n`;\n\nexport const AdditionalInfo = styled.div`\n  padding-left: 30px;\n  padding-top: 10px;\n  padding-bottom: 10px;\n  box-shadow: 0 4px 2px -2px gray;\n\n  & h3 {\n    margin-bottom: 10px;\n  }\n\n  & ul {\n    padding-left: 20px;\n    list-style: circle;\n    font-size: 18px;\n    font-weight: 500;\n  }\n`;\n\nexport const StyledLink = styled(Link)`\n  color: #573218;\n  font-size: 18px;\n\n  &:hover {\n    color: #d41b11;\n  }\n`;\n\nexport const SpinnerContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 150px;\n`;\n","import { useEffect, useState, useRef, Suspense } from 'react';\nimport { Outlet, useLocation, useParams } from 'react-router-dom';\nimport { ColorRing } from 'react-loader-spinner';\nimport { MdKeyboardBackspace } from 'react-icons/md';\n\nimport { getMovieDetails } from 'services/movie-service';\nimport emptyImg from 'images/emptyImg.png';\n\nimport {\n  BackButton,\n  MovieDetailsSection,\n  MovieInfoContainer,\n  ImgContainer,\n  AdditionalInfo,\n  StyledLink,\n  SpinnerContainer,\n} from './MovieDetails.styled';\n\nconst MovieDetails = () => {\n  const [movieInfo, setMovieInfo] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [rejected, setRejected] = useState();\n\n  const { movieId } = useParams();\n  const { state } = useLocation();\n\n  const backLink = useRef(state?.from || '/');\n\n  const {\n    title,\n    poster_path: image,\n    overview,\n    genres,\n    vote_average: score,\n  } = movieInfo;\n\n  useEffect(() => {\n    try {\n      (async () => {\n        setIsLoading(true);\n        const data = await getMovieDetails(movieId);\n        setMovieInfo(data);\n        setIsLoading(false);\n      })();\n    } catch (error) {\n      setIsLoading(false);\n      setRejected(error.message);\n    }\n  }, [movieId]);\n\n  return (\n    <main>\n      <MovieDetailsSection>\n        <BackButton to={backLink.current}>\n          {' '}\n          <MdKeyboardBackspace /> Go back\n        </BackButton>\n\n        {isLoading && (\n          <SpinnerContainer>\n            <ColorRing\n              colors={['#b8c480', '#B2A3B5', '#F4442E', '#51E5FF', '#429EA6']}\n            />\n          </SpinnerContainer>\n        )}\n        {title && (\n          <>\n            <MovieInfoContainer>\n              <ImgContainer>\n                {image ? (\n                  <img\n                    src={`https://image.tmdb.org/t/p/w300/${image}`}\n                    alt={title}\n                  />\n                ) : (\n                  <img src={emptyImg} alt=\"There are no images\" width={150} />\n                )}\n              </ImgContainer>\n              <div>\n                <h2>{title}</h2>\n                <p>{`User Score: ${Math.round(score * 10)}%`}</p>\n                <h3>Overview</h3>\n                <p>{overview}</p>\n                <h3>Genres</h3>\n                <p>{genres.map(({ name }) => name).join(' ')}</p>\n              </div>\n            </MovieInfoContainer>\n            <AdditionalInfo>\n              <h3>Additional information</h3>\n              <ul>\n                <li>\n                  <StyledLink to=\"cast\">Cast</StyledLink>\n                </li>\n                <li>\n                  <StyledLink to=\"reviews\">Reviews</StyledLink>\n                </li>\n              </ul>\n            </AdditionalInfo>\n            <Suspense fallback={<div>Loading...</div>}>\n              <Outlet />\n            </Suspense>\n          </>\n        )}\n\n        {rejected && !isLoading && <div>{rejected}</div>}\n      </MovieDetailsSection>\n    </main>\n  );\n};\n\nexport default MovieDetails;\n","import axios from 'axios';\n\nconst movieService = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  headers: {\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxNmM3MDM0ZjQzZmMxMWRhZjUzOTY2NmIxNGU1YmVhMCIsInN1YiI6IjY0OTk4NTA1YjM0NDA5MDBlMjcyZTgxNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.0M9W_VhYxYdCcevqQPPA792PMZPlCZIhzDoN3aG3W-M',\n    accept: 'application/json',\n  },\n});\n\nexport const getTrending = async () => {\n  const response = await movieService.get('trending/all/day?');\n  return response.data.results;\n};\n\nexport const searchMovies = async query => {\n  const response = await movieService.get(`search/movie?query=${query}`);\n  return response.data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await movieService.get(`movie/${movieId}?`);\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await movieService.get(`movie/${movieId}/credits?`);\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n    const response = await movieService.get(`movie/${movieId}/reviews?`);\n  return response.data.results;\n};\n"],"names":["MovieDetailsSection","styled","BackButton","Link","MovieInfoContainer","ImgContainer","AdditionalInfo","StyledLink","SpinnerContainer","useState","movieInfo","setMovieInfo","isLoading","setIsLoading","rejected","setRejected","movieId","useParams","state","useLocation","backLink","useRef","from","title","image","poster_path","overview","genres","score","vote_average","useEffect","getMovieDetails","data","error","message","to","current","colors","src","alt","emptyImg","width","Math","round","map","name","join","Suspense","fallback","movieService","axios","baseURL","headers","Authorization","accept","getTrending","get","response","results","searchMovies","query","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}