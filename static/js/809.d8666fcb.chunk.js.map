{"version":3,"file":"static/js/809.d8666fcb.chunk.js","mappings":"8WAIaA,EAAgBC,EAAAA,EAAAA,QAAH,8OAEAC,GASbC,EAASF,EAAAA,EAAAA,KAAH,0CAING,EAAaH,EAAAA,EAAAA,MAAH,gIAQVI,EAAWJ,EAAAA,EAAAA,OAAH,+SAoBRK,EAAaL,EAAAA,EAAAA,GAAH,sFAMVM,GAAaN,EAAAA,EAAAA,GAAOO,EAAAA,GAAPP,CAAH,iM,SCYvB,EAlDe,WACb,OAA4BQ,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAQJ,EAAaK,IAAI,UAE/BC,EAAAA,EAAAA,YAAU,WACR,IACE,IAAKF,EAAO,QACZ,iBAAC,qGACoBG,EAAAA,EAAAA,IAAaH,GADjC,OACOI,EADP,OAECV,EAAUU,GAFX,0CAAD,EAIgB,CAAhB,MAAOC,GAAS,CACnB,GAAE,CAACL,IASJ,OACE,2BACE,UAACjB,EAAD,YACE,UAACG,EAAD,CAAQoB,SAVO,SAAAC,GACnBA,EAAEC,iBACF,IAAMR,EAAQO,EAAEE,OAAOC,SAASV,MAAMW,MACtCd,EAAgBG,EAAQ,CAAEA,MAAAA,GAAU,CAAC,GACrCO,EAAEE,OAAOG,OACV,EAKK,WACE,SAACzB,EAAD,CAAY0B,KAAK,OAAOC,KAAK,QAAQC,YAAY,kBACjD,UAAC3B,EAAD,CAAUyB,KAAK,SAAf,WACE,SAAC,MAAD,IAAe,gBAInB,SAACxB,EAAD,UACGI,EAAOuB,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACV,2BACE,SAAC,MAAD,IAAe,KACf,SAAC5B,EAAD,CAAY6B,GAAE,UAAKD,GAAME,MAAO,CAAEC,KAAMvB,GAAxC,SACGmB,MAHIC,EADC,UAYrB,C,yLC7DKI,E,QAAeC,EAAAA,OAAa,CAChCC,QAAS,gCACTC,QAAS,CACPC,cACE,6NACFC,OAAQ,sBAICC,EAAW,mCAAG,oGACFN,EAAarB,IAAI,qBADf,cACnB4B,EADmB,yBAElBA,EAASzB,KAAK0B,SAFI,2CAAH,qDAKX3B,EAAY,mCAAG,WAAMH,GAAN,uFACHsB,EAAarB,IAAb,6BAAuCD,IADpC,cACpB6B,EADoB,yBAEnBA,EAASzB,KAAK0B,SAFK,2CAAH,sDAKZC,EAAe,mCAAG,WAAMC,GAAN,uFACNV,EAAarB,IAAb,gBAA0B+B,EAA1B,MADM,cACvBH,EADuB,yBAEtBA,EAASzB,MAFa,2CAAH,sDAKf6B,EAAe,mCAAG,WAAMD,GAAN,uFACNV,EAAarB,IAAb,gBAA0B+B,EAA1B,cADM,cACvBH,EADuB,yBAEtBA,EAASzB,KAAK8B,MAFQ,2CAAH,sDAKfC,EAAe,mCAAG,WAAMH,GAAN,uFACJV,EAAarB,IAAb,gBAA0B+B,EAA1B,cADI,cACrBH,EADqB,yBAEtBA,EAASzB,KAAK0B,SAFQ,2CAAH,qD","sources":["pages/Movies/Movies.styled.js","pages/Movies/Movies.jsx","services/movie-service.js"],"sourcesContent":["import { Link } from 'react-router-dom';\nimport styled from '@emotion/styled';\nimport filmImg from 'images/film1.jpg';\n\nexport const MoviesSection = styled.section`\n  height: 575px;\n  background-image: url(${filmImg});\n  background-position: center top;\n  background-repeat: no-repeat;\n  background-size: cover;\n  padding-top: 15px;\n  padding-bottom: 15px;\n  padding-left: 30px;\n`;\n\nexport const FormEL = styled.form`\n  display: flex;\n`;\n\nexport const InputField = styled.input`\n  height: 22px;\n  width: 300px;\n  border-radius: 5px;\n  margin-right: 10px;\n  margin-bottom: 15px;\n`;\n\nexport const ButtonEl = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: space-around;\n  font-size: 16px;\n  height: 26px;\n  width: 80px;\n  border-radius: 5px;\n  cursor: pointer;\n\n  & svg {\n    height: 18px;\n    width: 18px;\n  }\n\n  &:hover {\n    background-color: #edd068;\n  }\n`;\n\nexport const MoviesList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  row-gap: 3px;\n`;\n\nexport const StyledLink = styled(Link)`\n  font-weight: 500;\n  color: #362d17;\n  text-shadow: 1px 1px 1px #fdff70;\n  font-size: 20px;\n  &:hover {\n    color: #cc2b16;\n    text-decoration: underline;\n  }\n`;\n","import { useEffect, useState } from 'react';\nimport { useSearchParams, useLocation } from 'react-router-dom';\nimport { FcFilmReel } from 'react-icons/fc';\nimport { BiSearchAlt } from 'react-icons/bi';\n\nimport { searchMovies } from 'services/movie-service';\nimport {\n  MoviesSection,\n  InputField,\n  ButtonEl,\n  FormEL,\n  MoviesList,\n  StyledLink,\n} from './Movies.styled';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  const location = useLocation();\n\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    try {\n      if (!query) return;\n      (async () => {\n        const data = await searchMovies(query);\n        setMovies(data);\n      })();\n    } catch (error) {}\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const query = e.target.elements.query.value;\n    setSearchParams(query ? { query } : {});\n    e.target.reset();\n  };\n\n  return (\n    <main>\n      <MoviesSection>\n        <FormEL onSubmit={handleSubmit}>\n          <InputField type=\"text\" name=\"query\" placeholder=\"Movie search\" />\n          <ButtonEl type=\"submit\">\n            <BiSearchAlt />\n            Search\n          </ButtonEl>\n        </FormEL>\n        <MoviesList>\n          {movies.map(({ title, id }) => (\n            <li key={id}>\n              <FcFilmReel />{' '}\n              <StyledLink to={`${id}`} state={{ from: location }}>\n                {title}\n              </StyledLink>\n            </li>\n          ))}\n        </MoviesList>\n      </MoviesSection>\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst movieService = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  headers: {\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxNmM3MDM0ZjQzZmMxMWRhZjUzOTY2NmIxNGU1YmVhMCIsInN1YiI6IjY0OTk4NTA1YjM0NDA5MDBlMjcyZTgxNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.0M9W_VhYxYdCcevqQPPA792PMZPlCZIhzDoN3aG3W-M',\n    accept: 'application/json',\n  },\n});\n\nexport const getTrending = async () => {\n  const response = await movieService.get('trending/all/day?');\n  return response.data.results;\n};\n\nexport const searchMovies = async query => {\n  const response = await movieService.get(`search/movie?query=${query}`);\n  return response.data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await movieService.get(`movie/${movieId}?`);\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await movieService.get(`movie/${movieId}/credits?`);\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n    const response = await movieService.get(`movie/${movieId}/reviews?`);\n  return response.data.results;\n};\n"],"names":["MoviesSection","styled","filmImg","FormEL","InputField","ButtonEl","MoviesList","StyledLink","Link","useState","movies","setMovies","useSearchParams","searchParams","setSearchParams","location","useLocation","query","get","useEffect","searchMovies","data","error","onSubmit","e","preventDefault","target","elements","value","reset","type","name","placeholder","map","title","id","to","state","from","movieService","axios","baseURL","headers","Authorization","accept","getTrending","response","results","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}