{"version":3,"file":"static/js/142.e2d4de4f.chunk.js","mappings":"6WAKaA,EAAcC,EAAAA,EAAAA,QAAH,uNAEEC,GAQbC,EAAYF,EAAAA,EAAAA,GAAH,6GAOTG,EAAaH,EAAAA,EAAAA,GAAH,6GAOVI,GAAaJ,EAAAA,EAAAA,GAAOK,EAAAA,GAAPL,CAAH,4KAUVM,EAAmBN,EAAAA,EAAAA,IAAH,4F,SC+B7B,EAvDa,WACX,OAA4CO,EAAAA,EAAAA,UAAS,IAArD,eAAOC,EAAP,KAAuBC,EAAvB,KACA,GAAgCF,EAAAA,EAAAA,YAAhC,eAAOG,EAAP,KAAiBC,EAAjB,KACA,GAAkCJ,EAAAA,EAAAA,YAAlC,eAAOK,EAAP,KAAkBC,EAAlB,KACMC,GAAWC,EAAAA,EAAAA,MAgBjB,OAdAC,EAAAA,EAAAA,YAAU,YACR,iBAAC,oGAEGH,GAAa,GAFhB,UAGsBI,EAAAA,EAAAA,MAHtB,OAGSC,EAHT,OAIGT,EAAkBS,GAClBL,GAAa,GALhB,gDAOGA,GAAa,GACbF,EAAY,KAAMQ,SARrB,wDAAD,EAWD,GAAE,KAGD,2BACE,UAACpB,EAAD,YACE,SAACG,EAAD,UAAW,mBAEVU,IACC,SAACN,EAAD,WACE,SAAC,KAAD,CACEc,OAAQ,CAAC,UAAW,UAAW,UAAW,UAAW,eAK1DZ,EAAea,OAAS,GACvB,SAAClB,EAAD,UACGK,EAAec,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAIC,EAAd,EAAcA,KAAd,OAClB,2BACE,SAAC,MAAD,IAAiB,KACjB,SAACrB,EAAD,CAAYsB,GAAE,iBAAYF,GAAMG,MAAO,CAAEC,KAAMd,GAA/C,SACGS,GAASE,MAHLD,EADS,OAUR,IAAdZ,IACCF,IAAY,yBAAK,iCAGnBA,IAAaE,IAAa,yBAAMF,QAIxC,C,yLClEKmB,E,QAAeC,EAAAA,OAAa,CAChCC,QAAS,gCACTC,QAAS,CACPC,cACE,6NACFC,OAAQ,sBAICjB,EAAW,mCAAG,oGACFY,EAAaM,IAAI,qBADf,cACnBC,EADmB,yBAElBA,EAASlB,KAAKmB,SAFI,2CAAH,qDAKXC,EAAY,mCAAG,WAAMC,GAAN,uFACHV,EAAaM,IAAb,6BAAuCI,IADpC,cACpBH,EADoB,yBAEnBA,EAASlB,KAAKmB,SAFK,2CAAH,sDAKZG,EAAe,mCAAG,WAAMC,GAAN,uFACNZ,EAAaM,IAAb,gBAA0BM,EAA1B,MADM,cACvBL,EADuB,yBAEtBA,EAASlB,MAFa,2CAAH,sDAKfwB,EAAe,mCAAG,WAAMD,GAAN,uFACNZ,EAAaM,IAAb,gBAA0BM,EAA1B,cADM,cACvBL,EADuB,yBAEtBA,EAASlB,KAAKyB,MAFQ,2CAAH,sDAKfC,EAAe,mCAAG,WAAMH,GAAN,uFACJZ,EAAaM,IAAb,gBAA0BM,EAA1B,cADI,cACrBL,EADqB,yBAEtBA,EAASlB,KAAKmB,SAFQ,2CAAH,qD","sources":["pages/Home/Home.styled.js","pages/Home/Home.jsx","services/movie-service.js"],"sourcesContent":["import { Link } from 'react-router-dom';\n\nimport styled from '@emotion/styled';\nimport cinemaImg from 'images/cinema.png';\n\nexport const HomeSection = styled.section`\n  height: 575px;\n  background-image: url(${cinemaImg});\n  background-position: center top;\n  background-repeat: no-repeat;\n  background-size: cover;\n  padding-top: 15px;\n  padding-bottom: 15px;\n`;\n\nexport const HomeTitle = styled.h2`\n  text-align: center;\n  font-family: Robto;\n  font-size: 40px;\n  color: #facd6b;\n`;\n\nexport const MoviesList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  row-gap: 3px;\n  padding-left: 20px;\n`;\n\nexport const StyledLink = styled(Link)`\n  color: #facd6b;\n  text-shadow: 1px 1px 1px #312510;\n  font-size: 20px;\n  &:hover {\n    color: #cf3129;\n    text-decoration: underline;\n  }\n`;\n\nexport const SpinnerContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 200px;\n`;\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\n\nimport { ColorRing } from 'react-loader-spinner';\nimport { RiMovie2Line } from 'react-icons/ri';\n\nimport { getTrending } from 'services/movie-service';\nimport {\n  HomeSection,\n  HomeTitle,\n  StyledLink,\n  MoviesList,\n  SpinnerContainer,\n} from './Home.styled';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [rejected, setRejected] = useState();\n  const [isLoading, setIsLoading] = useState();\n  const location = useLocation();\n\n  useEffect(() => {\n    (async () => {\n      try {\n        setIsLoading(true);\n        const data = await getTrending();\n        setTrendingMovies(data);\n        setIsLoading(false);\n      } catch (error) {\n        setIsLoading(false);\n        setRejected(error.message);\n      }\n    })();\n  }, []);\n\n  return (\n    <main>\n      <HomeSection>\n        <HomeTitle>Trending today</HomeTitle>\n\n        {isLoading && (\n          <SpinnerContainer>\n            <ColorRing\n              colors={['#b8c480', '#B2A3B5', '#F4442E', '#51E5FF', '#429EA6']}\n            />\n          </SpinnerContainer>\n        )}\n\n        {trendingMovies.length > 0 ? (\n          <MoviesList>\n            {trendingMovies.map(({ title, id, name }) => (\n              <li key={id}>\n                <RiMovie2Line />{' '}\n                <StyledLink to={`movies/${id}`} state={{ from: location }}>\n                  {title || name}\n                </StyledLink>\n              </li>\n            ))}\n          </MoviesList>\n        ) : (\n          isLoading === false &&\n          !rejected && <div>There are no movies today...</div>\n        )}\n\n        {rejected && !isLoading && <div>{rejected}</div>}\n      </HomeSection>\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst movieService = axios.create({\n  baseURL: 'https://api.themoviedb.org/3/',\n  headers: {\n    Authorization:\n      'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxNmM3MDM0ZjQzZmMxMWRhZjUzOTY2NmIxNGU1YmVhMCIsInN1YiI6IjY0OTk4NTA1YjM0NDA5MDBlMjcyZTgxNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.0M9W_VhYxYdCcevqQPPA792PMZPlCZIhzDoN3aG3W-M',\n    accept: 'application/json',\n  },\n});\n\nexport const getTrending = async () => {\n  const response = await movieService.get('trending/all/day?');\n  return response.data.results;\n};\n\nexport const searchMovies = async query => {\n  const response = await movieService.get(`search/movie?query=${query}`);\n  return response.data.results;\n};\n\nexport const getMovieDetails = async movieId => {\n  const response = await movieService.get(`movie/${movieId}?`);\n  return response.data;\n};\n\nexport const getMovieCredits = async movieId => {\n  const response = await movieService.get(`movie/${movieId}/credits?`);\n  return response.data.cast;\n};\n\nexport const getMovieReviews = async movieId => {\n    const response = await movieService.get(`movie/${movieId}/reviews?`);\n  return response.data.results;\n};\n"],"names":["HomeSection","styled","cinemaImg","HomeTitle","MoviesList","StyledLink","Link","SpinnerContainer","useState","trendingMovies","setTrendingMovies","rejected","setRejected","isLoading","setIsLoading","location","useLocation","useEffect","getTrending","data","message","colors","length","map","title","id","name","to","state","from","movieService","axios","baseURL","headers","Authorization","accept","get","response","results","searchMovies","query","getMovieDetails","movieId","getMovieCredits","cast","getMovieReviews"],"sourceRoot":""}